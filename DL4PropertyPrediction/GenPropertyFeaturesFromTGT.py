import numpy as np
import sys
import os
import cPickle

import PropertyUtils
from Common.LoadTPLTGT import load_tgt as LoadTGT

def Usage():
	print 'python GenPropertyFeaturesFromTGT.py tgt_file'
	print '	This script generates input features from TGT file for property prediction'
	print '	tgt_file: a tgt file generated for template-based modeling'

def LoadTestData4Properties(tgtFile, name=None):
	tgt = LoadTGT(tgtFile)
	protein = dict()

	if name is not None:
		protein['name'] = name
	else:	
		protein['name'] = tgt['name']
	protein['length'] = tgt['length']
	protein['sequence'] = tgt['sequence']

	protein['NEFF'] = tgt['NEFF']
	protein['PSFM'] = tgt['PSFM']
	protein['PSSM'] = tgt['PSSM']

	## predicted information, which shall not be used
	protein['predSS3'] = tgt['SS3']
	protein['predSS8'] = tgt['SS8']
	protein['predACC'] = tgt['ACC_prob']

	## the data generated by this script is not used for training
	protein['ForTrain'] = False

	return protein

def main(argv):
	if len(argv) < 1:
		Usage()
		exit(1)

	tgtFile = argv[0]
	protein = LoadTestData4Properties(tgtFile)

	savefile = protein['name'] + '.propertyFeatures.pkl'
	with open(savefile, 'wb') as fh:
		cPickle.dump( protein, fh, protocol=cPickle.HIGHEST_PROTOCOL)

if __name__ == "__main__":
        main(sys.argv[1:])

