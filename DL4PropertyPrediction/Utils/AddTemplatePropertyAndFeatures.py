import numpy as np
import sys
import os
import cPickle
import copy

"""
This script merges template-based features with the sequence-based features to form a new set of features for local property prediction
Usage: python AddTemplateAndPropertyFeatures.py sequenceFeaturesPKL tplSimFeaturesPKL
tplSimFeaturesPKL is generated by GenPropertyFeaturesFromSingleAlignment.py or its batch version
sequenceFeaturesPKL could be generated by several scripts such as BatchGenPropertyFeaturesFromTGT.py, BatchGenPropertyFeaturesFromTPLTGT.py
"""
if len(sys.argv)<3:
	print 'python AddTemplatePropertyAndFeatures.py sequenceFeaturesPKL tplSimFeaturesPKL'
	exit(1)

originalFeatureFile = sys.argv[1]
tplSimFeatureFile = sys.argv[2]

##open the tpl similarity feature file
with open(tplSimFeatureFile, 'rb') as tplfh:
	tplfeatures = cPickle.load(tplfh)

print 'loaded templated-based features for ', len(tplfeatures), ' proteins'

##rebuild the tpl sim features for quick index
tplfeaturesPool = dict()
for tplf in tplfeatures:
	queryName = tplf[0]
	if not tplfeaturesPool.has_key( queryName ):
		tplfeaturesPool[queryName] = [ tplf ]
	else:
		tplfeaturesPool[queryName].append( tplf )

##open the original sequence feature file
with open(originalFeatureFile, 'rb') as ofh:
	orifeatures = cPickle.load(ofh)

print 'loaded original features for ', len(orifeatures), ' proteins'

mergedFeaturesPool = []
missedProteins = []
##merge the features
for protein in orifeatures:
	name = protein['name']
	if not tplfeaturesPool.has_key(name):
		print 'WARNING: there is no tpl features for ', name
		missedProteins.append(name)
		continue

	for tplfeatures in tplfeaturesPool[name]:
		seq, temp, simScore, tplProperties = tplfeatures
		if len(simScore) != len(protein['sequence']):
			print 'ERROR: inconsistent protein lengths for ', name
			exit(1)

		mergedFeatures = copy.deepcopy(protein)
		mergedFeatures['name'] = '-'.join([seq, temp])
		mergedFeatures['queryName'] = seq
		mergedFeatures['tempName'] = temp
		mergedFeatures['tplSimScore'] = np.array(simScore[:, 0:10])
		mergedFeatures['tplProperties'] = tplProperties

		mergedFeaturesPool.append(mergedFeatures)

print 'In total generated ', len(mergedFeaturesPool), ' merged features for ', len(orifeatures)-len(missedProteins), ' proteins'
print 'could not generate merged features for ', len(missedProteins), ' proteins'

##save the merged features
prefix = os.path.basename(originalFeatureFile).split('.')[0: -2] 
tplFlag = os.path.basename(tplSimFeatureFile).split('.')[0:-2]
tplFlag2 = [ a for a in tplFlag if a not in prefix ]
filenameItems = prefix + tplFlag2 + ['mergedPropertyFeatures', 'pkl']
filename = '.'.join( filenameItems)

print 'writing the merged features to file ', filename
with open(filename, 'wb') as fh:
	cPickle.dump(mergedFeaturesPool, fh, protocol = cPickle.HIGHEST_PROTOCOL)
