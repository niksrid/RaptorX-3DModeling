import numpy as np
import sys
import os
import cPickle

sys.path.append('../')
import PropertyUtils
from LoadAngleFile import LoadAngleFile
from GenPropertyFeaturesFromTPLTGT import LoadTrainData4Properties

sys.path.append(os.path.join(os.environ['ModelingHome'], 'Common') )
from LoadTPLTGT import load_tpl as LoadTPL
from LoadTPLTGT import load_tgt as LoadTGT

## this script file generates training data from TPL files and Yujuan's angle files

def Usage():
	print 'python BatchGenPropertyFeaturesFromTPLTGT.py proteinList tgt_dir tpl_dir angle_dir'
	print '	tgt_dir: the tgt file generated for template-based modeling'
	print '	tpl_dir: the tpl file generated for template-based modeling'
	print '	angle_dir: the angle file generated by Yujuan'

def main(argv):

	if len(argv) < 4:
		Usage()
		exit(-1)

	proteinListFile = argv[0]
	tgtDir = argv[1]
	tplDir = argv[2]
	angDir = argv[3]

	fh = open(proteinListFile, 'r')
	names = [ line.strip() for line in list(fh) ]
	fh.close()

	proteins = []
	for name in names:
		tgtFile = os.path.join(tgtDir, name + '.tgt')
		tplFile = os.path.join(tplDir, name + '.tpl')
		angFile = os.path.join(angDir, name + '.ang')

		protein = LoadTrainData4Properties(tgtFile, tplFile, angFile)
		proteins.append(protein)

	print 'In total generated features for ', len(proteins), ' proteins.'

	basename = os.path.basename(proteinListFile).split('.')[0]
	savefile = basename + '.' + str(os.getpid() ) + '.propertyFeatures.pkl'
	fh = open(savefile, 'wb')
	cPickle.dump( proteins, fh, protocol=cPickle.HIGHEST_PROTOCOL)
	fh.close()

if __name__ == "__main__":
        main(sys.argv[1:])

