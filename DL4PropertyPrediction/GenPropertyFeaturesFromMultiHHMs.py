import numpy as np
import sys
import os
import cPickle

from GenPropertyFeaturesFromHHM import LoadTestData4Properties

## this script generates input features from multiple HHM files for property prediction

def Usage():
	print 'python GenPropertyFeaturesFromMultiHHMs.py proteinName hhmFile1 hhmFile2 hhmFile3 ... [ResultDir]'
	print '	This script generates a property feature file (in PKL) from a set of hhm files for the same protein'
	print '	hhmFiles: the hhm files generated by hhmake from a3m file'
	print '	if the last argument does not end with .hhm, it is treated as a folder for saving the result file'
	print '		otherwise, the result file is saved in current work directory'
	print '	The result file is named after proteinName.propertyFeatures.pkl'


def main(argv):

	if len(argv) < 2:
		Usage()
		exit(1)

	proteinName = argv[0]
	inputs = argv[1:]

	savefolder = os.getcwd()
	if not inputs[-1].endswith('.hhm'):
		savefolder = inputs[-1]
		if not os.path.isdir(savefolder):
			print 'WARNING: the save folder does not exist: ', savefolder
	
		hhmFiles = inputs[:-1]
	else:
		hhmFiles = inputs

	features = []

	for hhmFile in hhmFiles:
		if not os.path.isfile(hhmFile):
			print 'hhmFile does not exist: ', hhmFile
			exit(1)
		
		feature = LoadTestData4Properties(hhmFile, proteinName)
		features.append(feature)

	savefile = os.path.join(savefolder, proteinName + '.propertyFeatures.pkl')
	with open(savefile, 'wb') as fh:
		cPickle.dump(features, fh, protocol=cPickle.HIGHEST_PROTOCOL)

if __name__ == "__main__":
        main(sys.argv[1:])

