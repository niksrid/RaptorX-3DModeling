import numpy as np
import sys
import os
import cPickle

from Common.LoadTPLTGT import load_hhm as LoadHHM

## this script generates input features from an HHM file for property prediction
## HHM file can be generated by hhmake from a3m file

def Usage():
	print 'python GenPropertyFeaturesFromHHM.py hhm_file'
	print '	hhm_file: the hhm file generated by hhmake from a3m file'


def LoadTestData4Properties(hhmFile, name=None):

	hhm = LoadHHM(hhmFile)
	if hhm is None:
		return None
	protein = dict()
	if name is not None:
		protein['name'] = name
	else:	
		protein['name'] = hhm['name']
	protein['length'] = hhm['length']
	protein['sequence'] = hhm['sequence']

	protein['NEFF'] = hhm['NEFF']
	protein['PSFM'] = hhm['PSFM']
	protein['PSSM'] = hhm['PSSM']

	## the data generated by this script is not used for training
	protein['ForTrain'] = False

	return protein

def main(argv):

	if len(argv) < 1:
		Usage()
		exit(1)

	hhmFile = argv[0]

	protein = LoadTestData4Properties(hhmFile)
	if protein is None:
		print 'ERROR: failed to load hhm file: ', hhmFile
		exit(1)

	savefile = protein['name'] + '.propertyFeatures.pkl'
	with open(savefile, 'wb') as fh:
		cPickle.dump( protein, fh, protocol=cPickle.HIGHEST_PROTOCOL)

if __name__ == "__main__":
        main(sys.argv[1:])

